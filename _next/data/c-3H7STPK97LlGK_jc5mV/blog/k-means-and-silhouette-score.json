{"pageProps":{"frontmatter":{"author":"AJDA","date":"2017-03-17 17:05:25+00:00","draft":false,"title":"k-Means and Silhouette Score","type":"blog","blog":["clustering","tutorial","unsupervised","youtube"]},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {YouTube} = _components;\n  if (!YouTube) _missingMdxReference(\"YouTube\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"k-Means is one of the most popular unsupervised learning algorithms for finding interesting groups in our data. It can be useful in customer segmentation, finding gene families, determining document types, improving human resource management and so on.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But... have you ever wondered how k-means works? In the following three videos we explain how to construct a data analysis workflow using k-means, how k-means works, how to find a good k value and how silhouette score can help us find the inliers and the outliers.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"#1 Constructing workflow with k-means\"\n      })\n    }), \"\\n\", _jsx(YouTube, {\n      embedId: \"vgmL808eSw4\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"#2 How k-means works [interactive visualization]\"\n      })\n    }), \"\\n\", _jsx(YouTube, {\n      embedId: \"I0e0Qyev8Ac\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"#3 How silhouette score works and why it is useful\"\n      })\n    }), \"\\n\", _jsx(YouTube, {\n      embedId: \"5TPldC_dC0s\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}},"__N_SSG":true}