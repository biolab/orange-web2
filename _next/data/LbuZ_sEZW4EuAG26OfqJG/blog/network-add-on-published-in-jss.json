{"pageProps":{"frontmatter":{"author":"BIOLAB","date":"2013-06-03 20:15:00+00:00","draft":false,"title":"Network Add-on Published in JSS","blog":["addons","network"]},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"NetExplorer, a widget for network exploration, was in orange for over 5 years. Several network analysis widgets were added to Orange since, and we decided to move the entire network functionality to an \", _jsx(_components.a, {\n        href: \"https://pypi.python.org/pypi/Orange-Network\",\n        children: \"Orange Network add-on\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We recently published a paper \", _jsx(_components.a, {\n        href: \"http://www.jstatsoft.org/v53/i06\",\n        children: \"Interactive Network Exploration with Orange\"\n      }), \" in the Journal of Statistical Software. We invite you to read the tutorial on network exploration. It is aimed for beginners in this topic, and includes detailed explanation with images.\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/blog/2013-06-network-add-on-published-in-jss/__webp-images__/netaddon.png__600x454_q95_crop_upscale.webp\",\n      alt: \"\",\n      width: \"600\",\n      height: \"454\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/blog/2013-06-network-add-on-published-in-jss/__webp-images__/netexplorer.png__600x417_q95_crop_upscale.webp\",\n      alt: \"\",\n      width: \"600\",\n      height: \"417\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}