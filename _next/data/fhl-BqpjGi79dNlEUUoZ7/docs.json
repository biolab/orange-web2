{"pageProps":{"sections":[{"title":"Visual Programming","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [_jsx(_components.a, {\n      href: \"/getting-started\",\n      children: \"Getting started\"\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"https://www.youtube.com/channel/UClKKWBe2SCAEyv7ZNGhIe4g\",\n      children: \"YouTube tutorials\"\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"https://orange3.readthedocs.io/projects/orange-visual-programming/en/latest/loading-your-data/index.html\",\n      children: \"Loading your data\"\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"/widget-catalog/\",\n      children: \"Widget catalog\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},{"title":"Development","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [_jsx(_components.a, {\n      href: \"https://orange-widget-base.readthedocs.io/\",\n      children: \"Widget development\"\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"https://github.com/biolab/orange3-example-addon\",\n      children: \"Example addon\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},{"title":"Python Library","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [_jsx(_components.a, {\n      href: \"https://orange-data-mining-library.readthedocs.io/en/latest/#tutorial\",\n      children: \"Tutorial\"\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"https://orange-data-mining-library.readthedocs.io/en/latest/#reference\",\n      children: \"Reference\"\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"http://docs.biolab.si/2/\",\n      children: \"Orange 2.7 documentation\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}],"index":{"title":"Documentation","url":"/docs","listing":true,"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"For a list of frequently asked questions, see \", _jsx(_components.a, {\n      href: \"/faq/\",\n      children: \"FAQ\"\n    }), \". Also, feel free to reach out to us in our \", _jsx(_components.a, {\n      href: \"https://discord.gg/FWrfeXV\",\n      children: \"Discord chatroom\"\n    }), \".\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"__N_SSG":true}