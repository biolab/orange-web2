{"pageProps":{"frontmatter":{"author":"BIOLAB","date":"2010-03-04 01:56:00+00:00","draft":false,"title":"Debian repository lives!","blog":["debian","distribution","download","packaging"],"oldUrl":"/blog/2010/03/04/debian-repository-lives/"},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"We have made still-experimental-but-probably-working Debian repository with daily built Orange packages. Currently without add-ons.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To get access to those packages just add those two lines to your /etc/apt/sources.list (this file contains a list of repositories with packages):\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"    deb http://orange.biolab.si/debian lenny main\\n    deb-src http://orange.biolab.si/debian lenny main\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And then you can install Orange with this command:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"    aptitude update\\n    aptitude install orange-svn\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Packages are not signed as they are made automatically so you will probably be warned about this.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Those packages will probably work also on other Debian-based Linux distributions like Ubuntu, but have not yet been tested there. Please test it and report how it goes.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can also get source of those packages with this command:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"    apt-get source python-orange-svn\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And then build package by yourself in extracted source directory with:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"    dpkg-buildpackage\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For example this will be useful on amd64 platform for which we currently do not yet provide binary packages. (Edit: now we provide binary packages also for amd64 platform.) But we will once we see how well this system works.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}