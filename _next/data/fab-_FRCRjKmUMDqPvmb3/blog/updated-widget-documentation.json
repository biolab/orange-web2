{"pageProps":{"frontmatter":{"author":"AJDA","date":"2015-09-04 13:00:18+00:00","draft":false,"title":"Updated Widget Documentation","type":"blog","blog":["documentation","orange3","widget"]},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Happy news for all passionate Orange users! We’ve uploaded documentation for our Orange 3 widget selection.\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/blog/2015-09-updated-widget-documentation/__webp-images__/blog2.webp\",\n      alt: \"\",\n      width: \"616\",\n      height: \"539\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Right click and select \\\"Help\\\" or press F1.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"** **\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It’s easy to use. To learn more about a particular wigdet, click on the widget. Either use right click and select “Help” or press F1. A new window will open with a widget description and an example for its use. There are also screenshots included as visual help.\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/blog/2015-09-updated-widget-documentation/__webp-images__/blog1.webp\",\n      alt: \"\",\n      width: \"842\",\n      height: \"695\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Widget documentation.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"** **\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We are going to be updating documentation as the widgets continue to develop. Documentation for bioinformatics and data fusion add-ons is expected to be up and running in the following week.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}